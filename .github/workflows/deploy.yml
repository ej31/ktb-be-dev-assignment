name: Spring Boot Deployment

on:
  push:
    branches: [ feature ] # feature 브랜치 push 할 때 실행

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/teddy-assignment

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build -x test

    - name: Login to Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Github Container Registry 로그인
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # 이전 컨테이너 중지 및 삭제
          docker stop teddy-assignment || true
          docker rm teddy-assignment || true
          
          # 최신 이미지 풀
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # 새 컨테이너 실행
          docker run -d \
            --name teddy-assignment \
            -p 8080:8080 \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASS=${{ secrets.DB_PASS }} \
            -e API_KEY=${{ secrets.API_KEY }} \
            --restart unless-stopped \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest